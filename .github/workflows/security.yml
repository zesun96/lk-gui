name: Security

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security scan every Monday at 9 AM UTC
    - cron: '0 9 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.0'

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-no-fail -fmt sarif -out results.sarif ./...'
        
    - name: Check if SARIF file exists
      run: |
        if [ -f "results.sarif" ]; then
          echo "✅ SARIF file generated successfully"
          ls -la results.sarif
        else
          echo "❌ SARIF file not found"
          echo "Current directory contents:"
          ls -la
          exit 1
        fi

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: success() && hashFiles('results.sarif') != ''
      with:
        sarif_file: results.sarif
        
    - name: Upload SARIF file as artifact (backup)
      uses: actions/upload-artifact@v4
      if: always() && hashFiles('results.sarif') != ''
      with:
        name: gosec-sarif
        path: results.sarif
        retention-days: 7

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run npm audit
      working-directory: frontend
      run: |
        echo "Running npm audit..."
        npm audit --audit-level=high || {
          echo "⚠️ npm audit found high-level vulnerabilities"
          echo "Continuing with workflow..."
        }

    - name: Check for known vulnerabilities in Go modules
      run: |
        echo "Installing govulncheck..."
        go install golang.org/x/vuln/cmd/govulncheck@latest
        echo "Running govulncheck..."
        govulncheck ./... || {
          echo "⚠️ govulncheck found vulnerabilities"
          echo "Continuing with workflow..."
        }